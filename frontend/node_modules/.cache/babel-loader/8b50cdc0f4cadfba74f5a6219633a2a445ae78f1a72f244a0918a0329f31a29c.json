{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jabel\\\\Documents\\\\GitHub\\\\Proyecto2025-Archive\\\\frontend\\\\src\\\\Pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useContext } from 'react';\nimport { UserTypeContext } from \"../App\";\nimport { jwtDecode } from 'jwt-decode';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [userType, setuserType] = useContext(UserTypeContext);\n  const navigation = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    setError(null);\n    const user = {\n      email: document.getElementById(\"email\").value,\n      password: document.getElementById(\"password\").value\n    };\n    try {\n      const response = await fetch('http://localhost:8523/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'text/plain'\n        },\n        body: JSON.stringify(user) // Replace with your data\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const responseData = await response.json();\n      setData(responseData);\n      console.log(data.token);\n      localStorage.setItem('userToken', data.token);\n      const decoded = jwtDecode(localStorage.getItem('userToken'));\n      console.log(decoded.usertype);\n      setuserType(decoded.usertype);\n    } catch (e) {\n      setError(e);\n    } finally {\n      setLoading(false);\n      navigation(\"/\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Email\",\n      type: \"email\",\n      id: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"password\",\n      type: \"password\",\n      id: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"GZ3qZPTuilaqGPZraTOQ9zt36gk=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\n\n/*\r\nasync function LoginRequest() {\r\n  try {\r\n\r\n    const response = await fetch('http://localhost:8523/login', {\r\n    method: 'POST' ,\r\n    headers: {\r\n        'Content-Type': 'text/plain'\r\n    },\r\n    body: JSON.stringify(user)\r\n    }).then(res => {\r\n    if (response.ok) {\r\n          console.log(response.json())\r\n          alert(\"Logged in\");\r\n            // REDIRECT USER \r\n        } else {\r\n          alert(\"Could not log in\"); \r\n        }\r\n    })\r\n  } catch (error) {\r\n    console.error(\"Fetch error:\", error);\r\n    alert(\"Error ocurred while loggin in.\"); \r\n  }\r\n}*/\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useContext","UserTypeContext","jwtDecode","Link","useNavigate","jsxDEV","_jsxDEV","Login","_s","data","setData","loading","setLoading","error","setError","userType","setuserType","navigation","handleSubmit","event","preventDefault","user","email","document","getElementById","value","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","responseData","json","console","log","token","localStorage","setItem","decoded","getItem","usertype","e","children","placeholder","type","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jabel/Documents/GitHub/Proyecto2025-Archive/frontend/src/Pages/Login.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useContext } from 'react'\r\nimport {UserTypeContext} from \"../App\"\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n  const [data, setData] = useState(null); \r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [userType,setuserType] = useContext(UserTypeContext);\r\n\r\n  const navigation = useNavigate(); \r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n    const user = {\r\n      email: document.getElementById(\"email\").value,\r\n      password: document.getElementById(\"password\").value,\r\n    };\r\n\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8523/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'text/plain',\r\n        },\r\n        body: JSON.stringify(user), // Replace with your data\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const responseData = await response.json();\r\n      setData(responseData);\r\n      console.log(data.token)\r\n      localStorage.setItem('userToken', data.token);\r\n      const decoded = jwtDecode(localStorage.getItem('userToken'))\r\n      console.log(decoded.usertype)\r\n      setuserType(decoded.usertype)\r\n    } catch (e) {\r\n      setError(e);\r\n    } finally {\r\n      setLoading(false);\r\n      navigation(\"/\")\r\n    }\r\n  };\r\n\r\n\r\n\r\n    return (\r\n        <form>\r\n            <input placeholder=\"Email\" type=\"email\" id=\"email\"></input>\r\n            <input placeholder=\"password\" type=\"password\" id=\"password\"></input>\r\n            <button onClick={handleSubmit}>Log in</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n\r\n/*\r\nasync function LoginRequest() {\r\n  try {\r\n\r\n    const response = await fetch('http://localhost:8523/login', {\r\n    method: 'POST' ,\r\n    headers: {\r\n        'Content-Type': 'text/plain'\r\n    },\r\n    body: JSON.stringify(user)\r\n    }).then(res => {\r\n    if (response.ok) {\r\n          console.log(response.json())\r\n          alert(\"Logged in\");\r\n            // REDIRECT USER \r\n        } else {\r\n          alert(\"Could not log in\"); \r\n        }\r\n    })\r\n  } catch (error) {\r\n    console.error(\"Fetch error:\", error);\r\n    alert(\"Error ocurred while loggin in.\"); \r\n  }\r\n}*/"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,QAAQ,OAAO;AAClC,SAAQC,eAAe,QAAO,QAAQ;AACtC,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACgB,QAAQ,EAACC,WAAW,CAAC,GAAGhB,UAAU,CAACC,eAAe,CAAC;EAE1D,MAAMgB,UAAU,GAAGb,WAAW,CAAC,CAAC;EAEhC,MAAMc,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBR,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,MAAMO,IAAI,GAAG;MACXC,KAAK,EAAEC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC,KAAK;MAC7CC,QAAQ,EAAEH,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC;IAChD,CAAC;IAGD,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI,CAAC,CAAE;MAC9B,CAAC,CAAC;MAEF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBR,QAAQ,CAACS,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMC,YAAY,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAC1C5B,OAAO,CAAC2B,YAAY,CAAC;MACrBE,OAAO,CAACC,GAAG,CAAC/B,IAAI,CAACgC,KAAK,CAAC;MACvBC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAElC,IAAI,CAACgC,KAAK,CAAC;MAC7C,MAAMG,OAAO,GAAG1C,SAAS,CAACwC,YAAY,CAACG,OAAO,CAAC,WAAW,CAAC,CAAC;MAC5DN,OAAO,CAACC,GAAG,CAACI,OAAO,CAACE,QAAQ,CAAC;MAC7B9B,WAAW,CAAC4B,OAAO,CAACE,QAAQ,CAAC;IAC/B,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVjC,QAAQ,CAACiC,CAAC,CAAC;IACb,CAAC,SAAS;MACRnC,UAAU,CAAC,KAAK,CAAC;MACjBK,UAAU,CAAC,GAAG,CAAC;IACjB;EACF,CAAC;EAIC,oBACIX,OAAA;IAAA0C,QAAA,gBACI1C,OAAA;MAAO2C,WAAW,EAAC,OAAO;MAACC,IAAI,EAAC,OAAO;MAACC,EAAE,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3DjD,OAAA;MAAO2C,WAAW,EAAC,UAAU;MAACC,IAAI,EAAC,UAAU;MAACC,EAAE,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpEjD,OAAA;MAAQkD,OAAO,EAAEtC,YAAa;MAAA8B,QAAA,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEf;AAAC/C,EAAA,CAvDQD,KAAK;EAAA,QAMOH,WAAW;AAAA;AAAAqD,EAAA,GANvBlD,KAAK;AAyDd,eAAeA,KAAK;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}