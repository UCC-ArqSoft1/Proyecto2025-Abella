{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jabel\\\\Desktop\\\\proyecto2025\\\\frontend\\\\src\\\\Pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function LoginRequest() {\n  try {\n    const response = await fetch('http://localhost:8523/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'text/plain'\n      },\n      body: JSON.stringify(user)\n    }).then(res => {\n      if (response.ok) {\n        console.log(response.json());\n        alert(\"Logged in\");\n        // REDIRECT USER \n      } else {\n        alert(\"Could not log in\");\n      }\n    });\n  } catch (error) {\n    console.error(\"Fetch error:\", error);\n    alert(\"Error ocurred while loggin in.\");\n  }\n}\n_c = LoginRequest;\nfunction Login() {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    setError(null);\n    const user = {\n      email: document.getElementById(\"email\").value,\n      password: document.getElementById(\"password\").value\n    };\n    try {\n      const response = await fetch('your-api-endpoint', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          key: 'value'\n        }) // Replace with your data\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const responseData = await response.json();\n      setData(responseData);\n    } catch (e) {\n      setError(e);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Email\",\n      type: \"email\",\n      id: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"password\",\n      type: \"password\",\n      id: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: LoginRequest,\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"PF2na9M8UJ4bLzW1+Lbyf4L3N00=\");\n_c2 = Login;\nexport default Login;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoginRequest\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"names":["LoginRequest","response","fetch","method","headers","body","JSON","stringify","user","then","res","ok","console","log","json","alert","error","_c","Login","_s","data","setData","useState","loading","setLoading","setError","handleSubmit","event","preventDefault","email","document","getElementById","value","password","key","Error","status","responseData","e","_jsxDEV","children","placeholder","type","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/jabel/Desktop/proyecto2025/frontend/src/Pages/Login.js"],"sourcesContent":["\r\nasync function LoginRequest() {\r\n  try {\r\n\r\n    const response = await fetch('http://localhost:8523/login', {\r\n    method: 'POST' ,\r\n    headers: {\r\n        'Content-Type': 'text/plain'\r\n    },\r\n    body: JSON.stringify(user)\r\n    }).then(res => {\r\n    if (response.ok) {\r\n          console.log(response.json())\r\n          alert(\"Logged in\");\r\n            // REDIRECT USER \r\n        } else {\r\n          alert(\"Could not log in\"); \r\n        }\r\n    })\r\n  } catch (error) {\r\n    console.error(\"Fetch error:\", error);\r\n    alert(\"Error ocurred while loggin in.\"); \r\n  }\r\n}\r\nfunction Login() {\r\nconst [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n        const user = {\r\n      email: document.getElementById(\"email\").value,\r\n      password: document.getElementById(\"password\").value,\r\n    };\r\n\r\n\r\n    try {\r\n      const response = await fetch('your-api-endpoint', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ key: 'value' }), // Replace with your data\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const responseData = await response.json();\r\n      setData(responseData);\r\n    } catch (e) {\r\n      setError(e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n    return (\r\n        <form>\r\n            <input placeholder=\"Email\" type=\"email\" id=\"email\"></input>\r\n            <input placeholder=\"password\" type=\"password\" id=\"password\"></input>\r\n            <button onClick={LoginRequest}>Log in</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}